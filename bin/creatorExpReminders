#!/usr/bin/env node

require('dotenv').config({ path: '../.env' });
require('../config/mongoose');

//Models
const User = require('../models/user'),
      Experience = require('../models/experience'),
      Occurrence = require('../models/occurrence'),
      Creator = require('../models/creator'),
      Notification = require('../models/notification');

const creatorExpReminders = async () => {
    console.log('JOB START: CREATOR EXPERIENCE REMINDERS');
    try {
        const oldNotifs = await Notification.find({
                            category: 'Creator-ExperienceReminder'
                        }).distinct('_id');
        for(const notif of oldNotifs) {
            await User.findOneAndUpdate({notifications: notif},
            {$pull: {notifications: notif}});
        }

        //Delete old reminders
        await Notification.deleteMany({_id: {$in: oldNotifs}});

        //Get experiences happening in the next 2 days
        const occs = await Occurrence.find({
            date: {
                $gte: new Date(), 
                $lte: new Date().setDate(new Date().getDate() + 2)
            }
        }, 'date timeslot').populate({
            path: 'experience',
            select: 'title',
            populate: {
                path: 'creator',
                select: 'user'
            }
        });

        //Update notifications
        for(const occ of occs) {
            const when = occ.date.getDate() === new Date().getDate()? 
                        'today' : 'tomorrow';
            const notif = new Notification({
                message: `Your experience "${occ.experience.title}" is happening ${
                when} at ${occ.timeslot.split('-')[0]}. Don't forget!`,
                user: occ.experience.creator.user,
                category: 'Creator-ExperienceReminder'
            });
            await notif.save();
            await User.findByIdAndUpdate(occ.experience.creator.user,
            {$addToSet: {notifications: notif._id}});
        }

        console.log('JOB SUCCESS: CREATOR EXPERIENCE REMINDERS');
    } catch(err) {
        console.log(`JOB FAILED: CREATOR EXPERIENCE REMINDERS - ${err}`);
    }
    process.exit();
}
creatorExpReminders();
